<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.steeplesoft</groupId>
    <artifactId>wildfly-arq-testcontainers-kafka</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <version.arquillian>1.6.0.Final</version.arquillian>
        <version.failsafe.plugin>${version.surefire.plugin}</version.failsafe.plugin>
        <version.surefire.plugin>2.22.2</version.surefire.plugin>
        <version.testcontainers>1.17.3</version.testcontainers>
        <version.wildfly.maven.plugin>3.0.2.Final</version.wildfly.maven.plugin>
        <version.wildfly>26.1.1.Final</version.wildfly>

        <wildfly.dir>${project.basedir}/target/wildfly-${version.wildfly}</wildfly.dir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>8.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.reactive.messaging</groupId>
            <artifactId>microprofile-reactive-messaging-api</artifactId>
            <version>3.0-RC4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>3.0.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.smallrye.reactive</groupId>
            <artifactId>smallrye-reactive-messaging-kafka-api</artifactId>
            <version>3.13.0</version>
        </dependency>

        <!-- Test Deps -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <version>${version.arquillian}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <version>${version.arquillian}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-depchain</artifactId>
            <version>2.2.7</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <!-- Override deps to avoid CVE-affected versions -->
        <dependency>
            <groupId>org.apache.sshd</groupId>
            <artifactId>sshd-core</artifactId>
            <scope>test</scope>
            <version>2.8.0</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.remoting</groupId>
            <artifactId>jboss-remoting</artifactId>
            <scope>test</scope>
            <version>5.0.25.SP1-redhat-00001</version>
        </dependency>
        <!-- Override deps to avoid CVE-affected versions -->

        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <version>3.0.1.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <version>${version.testcontainers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.13.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.wildfly.plugins</groupId>
                    <artifactId>wildfly-maven-plugin</artifactId>
                    <version>${version.wildfly.maven.plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <!-- An optional Arquillian testing profile that executes tests in your JBoss EAP instance.
                 This profile will start a new JBoss EAP instance, and execute the test, shutting it down when done.
                 Run with: mvn clean verify -Parq-managed -->
            <id>arq-managed</id>
            <build>
                <defaultGoal>verify</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <version>2.1.1</version>
                        <executions>
                            <execution>
                                <id>kafka</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        def image = org.testcontainers.utility.DockerImageName.parse("confluentinc/cp-kafka")
                                                .withTag("7.2.1")
                                        def kafka = new org.testcontainers.containers.KafkaContainer(image)
                                        kafka.start()
                                        project.properties.setProperty('kafka.server', kafka.bootstrapServers)
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.testcontainers</groupId>
                                <artifactId>kafka</artifactId>
                                <version>${version.testcontainers}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>provision-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                                <configuration>
                                    <recordProvisioningState>true</recordProvisioningState>
                                    <feature-packs>
                                        <feature-pack>
                                            <location>org.wildfly:wildfly-cloud-legacy-galleon-pack:${version.wildfly}</location>
                                        </feature-pack>
                                    </feature-packs>
                                    <layers>
                                        <layer>jaxrs-server</layer>
                                        <layer>microprofile-reactive-messaging</layer>
                                        <layer>microprofile-reactive-messaging-kafka</layer>
                                    </layers>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <provisioning-dir>${wildfly.dir}</provisioning-dir>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${version.failsafe.plugin}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <arquillian.launch>jboss</arquillian.launch>
                                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                                        <jboss.home>${wildfly.dir}</jboss.home>
                                        <kafka.server>${kafka.server}</kafka.server>
                                    </systemPropertyVariables>
                                    <redirectTestOutputToFile>false</redirectTestOutputToFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>